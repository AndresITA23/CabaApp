{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andres P\\xE9rez\\\\Desktop\\\\CabaApp\\\\CabaApp\\\\src\\\\screens\\\\Account\\\\RegisterScreen.tsx\",\n  _this = this;\nimport React from \"react\";\nimport { View, Text, FormControl, Input, InputField, Button } from \"@gluestack-ui/themed\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFormik } from \"formik\";\nimport { initialValues, validationSchema } from \"./RegisterForm.data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Register = function Register() {\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: validationSchema(),\n    onSubmit: function onSubmit(formValue) {\n      console.log(\"Formulario enviado\");\n      console.log(formValue);\n    }\n  });\n  return _jsxDEV(View, {\n    children: [_jsxDEV(FormControl, {\n      isInvalid: false,\n      size: \"lg\",\n      isDisabled: false,\n      isRequired: true,\n      w: \"$4/5\",\n      justifyContent: \"center\",\n      marginTop: \"$5\",\n      children: _jsxDEV(Input, {\n        borderRadius: \"$2xl\",\n        borderWidth: \"$0\",\n        h: \"$12\",\n        children: _jsxDEV(InputField, {\n          type: \"text\",\n          placeholder: \"Email\",\n          backgroundColor: \"white\",\n          onChangeText: function onChangeText(text) {\n            return formik.setFieldValue(\"email\", text);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), _jsxDEV(Button, {\n      action: \"primary\",\n      variant: \"solid\",\n      size: \"md\",\n      isDisabled: false,\n      onPress: formik.handleSubmit,\n      children: _jsxDEV(Text, {\n        children: \"Hola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), _jsxDEV(TouchableOpacity, {\n      style: {\n        backgroundColor: \"black\",\n        padding: 10,\n        borderRadius: 16,\n        alignItems: \"center\",\n        width: 110\n      },\n      onPress: formik.handleSubmit,\n      children: _jsxDEV(Text, {\n        color: \"white\",\n        fontSize: 18,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\nexport default Register;","map":{"version":3,"names":["React","View","Text","FormControl","Input","InputField","Button","TouchableOpacity","useFormik","initialValues","validationSchema","jsxDEV","_jsxDEV","Register","formik","onSubmit","formValue","console","log","children","isInvalid","size","isDisabled","isRequired","w","justifyContent","marginTop","borderRadius","borderWidth","h","type","placeholder","backgroundColor","onChangeText","text","setFieldValue","fileName","_jsxFileName","lineNumber","columnNumber","_this","action","variant","onPress","handleSubmit","style","padding","alignItems","width","color","fontSize"],"sources":["C:/Users/Andres PÃ©rez/Desktop/CabaApp/CabaApp/src/screens/Account/RegisterScreen.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {View,Text,FormControl,Input,InputField,Button,ButtonText,} from \"@gluestack-ui/themed\";\r\nimport {TouchableOpacity } from \"react-native\";\r\n\r\nimport { ErrorMessage, useFormik } from \"formik\";\r\nimport { initialValues, validationSchema } from \"./RegisterForm.data\";\r\n\r\n\r\nconst Register = () => {\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues(),\r\n    validationSchema: validationSchema(),\r\n    onSubmit: (formValue) => {\r\n      console.log(\"Formulario enviado\");\r\n      console.log(formValue);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <View>\r\n\r\n      <FormControl\r\n        isInvalid={false}\r\n        size={\"lg\"}\r\n        isDisabled={false}\r\n        isRequired={true}\r\n        w={\"$4/5\"}\r\n        justifyContent=\"center\"\r\n        marginTop={\"$5\"}\r\n      >\r\n        <Input borderRadius=\"$2xl\" borderWidth=\"$0\" h={\"$12\"} >\r\n          <InputField\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            backgroundColor=\"white\"\r\n            onChangeText={(text) => formik.setFieldValue(\"email\", text)}\r\n          />\r\n        </Input>\r\n      </FormControl>\r\n\r\n      <Button\r\n        action={\"primary\"}\r\n        variant={\"solid\"}\r\n        size={\"md\"}\r\n        isDisabled={false}\r\n        onPress={formik.handleSubmit}\r\n      ><Text>Hola</Text></Button>\r\n\r\n      <TouchableOpacity\r\n        style={{\r\n          backgroundColor: \"black\",\r\n          padding: 10,\r\n          borderRadius: 16,\r\n          alignItems: \"center\",\r\n          width: 110,\r\n        }}\r\n        onPress={formik.handleSubmit}\r\n      >\r\n        <Text color=\"white\" fontSize={18}>\r\n          Login\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}