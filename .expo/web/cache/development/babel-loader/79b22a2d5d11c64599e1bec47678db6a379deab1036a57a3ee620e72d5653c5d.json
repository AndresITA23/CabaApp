{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andres P\\xE9rez\\\\Desktop\\\\CabaApp\\\\CabaApp\\\\src\\\\navigation\\\\NavBar.tsx\",\n  _this = this;\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport React from \"react\";\nimport Explore from \"../screens/Explore\";\nimport Favorites from \"../screens/Favorites\";\nimport Reservations from \"../screens/Reservations\";\nimport SettingsScreen from \"../screens/Settings\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Tab = createBottomTabNavigator();\nvar NavBar = function NavBar() {\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-list' : 'ios-list-outline';\n          }\n          return _jsxDEV(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 16\n          }, _this);\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"Explore\",\n      component: Explore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this), _jsxDEV(Tab.Screen, {\n      name: \"Favorites\",\n      component: Favorites\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), _jsxDEV(Tab.Screen, {\n      name: \"Reservations\",\n      component: Reservations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), _jsxDEV(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\nexport default NavBar;","map":{"version":3,"names":["createBottomTabNavigator","React","Explore","Favorites","Reservations","SettingsScreen","Ionicons","jsxDEV","_jsxDEV","Tab","NavBar","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","fileName","_jsxFileName","lineNumber","columnNumber","_this","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component"],"sources":["C:/Users/Andres PÃ©rez/Desktop/CabaApp/CabaApp/src/navigation/NavBar.tsx"],"sourcesContent":["import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { View } from \"react-native\";\r\nimport React from \"react\";\r\nimport Explore from \"../screens/Explore\";\r\nimport Favorites from \"../screens/Favorites\";\r\nimport Reservations from \"../screens/Reservations\";\r\nimport SettingsScreen from \"../screens/Settings\";\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n      tabBarIcon: ({ focused, color, size }) => {\r\n        let iconName;\r\n\r\n        if (route.name === 'Home') {\r\n          iconName = focused\r\n            ? 'ios-information-circle'\r\n            : 'ios-information-circle-outline';\r\n        } else if (route.name === 'Settings') {\r\n          iconName = focused ? 'ios-list' : 'ios-list-outline';\r\n        }\r\n\r\n        // You can return any component that you like here!\r\n        return <Ionicons name={iconName} size={size} color={color} />;\r\n      },\r\n      tabBarActiveTintColor: 'tomato',\r\n      tabBarInactiveTintColor: 'gray',\r\n    })}\r\n\r\n      // screenOptions={{\r\n      //   tabBarShowLabel: true,\r\n      //   tabBarActiveTintColor: \"#BFA27E\",\r\n      //   tabBarInactiveTintColor: \"gray\",\r\n      //   tabBarLabelPosition: \"below-icon\",\r\n      //   tabBarIconStyle: {},\r\n      //   tabBarLabelStyle: {},\r\n      //   tabBarStyle: {\r\n      //     backgroundColor: \"white\",\r\n      //     position: \"absolute\",\r\n      //     marginHorizontal: 10,\r\n      //     height: 80,\r\n      //     borderRadius: 20,\r\n      //     shadowColor: \"#000\",\r\n      //     shadowOpacity: 0.08,\r\n      //     paddingHorizontal: 10,\r\n      //   },\r\n      // }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Explore\"\r\n        component={Explore}\r\n        \r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Favorites\"\r\n        component={Favorites}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Reservations\"\r\n        component={Reservations}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Settings\"\r\n        component={SettingsScreen}\r\n      />\r\n\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\n// function tabBarIconOptions (route, color, size) {\r\n//   let iconName;\r\n  \r\n//   if (route.name === \"Explore\") {\r\n//     iconName = \"\";\r\n//   }\r\n//   if (route.name === \"Favorites\") {\r\n//     iconName = \"\";\r\n//   }\r\n//   if (route.name === \"Reservations\") {\r\n//     iconName = \"\";\r\n//   }\r\n//   if (route.name === \"Settings\") {\r\n//     iconName = \"\";\r\n//   }\r\n\r\n//   return (\r\n//     <MaterialIcons name={iconName} size={size} color={color} />\r\n//   )\r\n// }\r\n\r\nexport default NavBar;\r\n"],"mappings":";;AAAA,SAASA,wBAAwB,QAAQ,+BAA+B;AAExE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,cAAc,MAAM,qBAAqB;AAChD,OAAOC,QAAQ,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,IAAMC,GAAG,GAAGT,wBAAwB,CAAC,CAAC;AAEtC,IAAMU,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,OACEF,OAAA,CAACC,GAAG,CAACE,SAAS;IACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAA,OAAQ;QAC/BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;UAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UACjC,IAAIC,QAAQ;UAEZ,IAAIN,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;YACzBD,QAAQ,GAAGH,OAAO,GACd,wBAAwB,GACxB,gCAAgC;UACtC,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,UAAU,EAAE;YACpCD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;UACtD;UAGA,OAAOT,OAAA,CAACF,QAAQ;YAACe,IAAI,EAAED,QAAS;YAACD,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAE,CAAC;QAC/D,CAAC;QACDC,qBAAqB,EAAE,QAAQ;QAC/BC,uBAAuB,EAAE;MAC3B,CAAC;IAAA,CAAE;IAAAC,QAAA,GAqBDrB,OAAA,CAACC,GAAG,CAACqB,MAAM;MACTT,IAAI,EAAC,SAAS;MACdU,SAAS,EAAE7B;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAEpB,CAAC,EAEFlB,OAAA,CAACC,GAAG,CAACqB,MAAM;MACTT,IAAI,EAAC,WAAW;MAChBU,SAAS,EAAE5B;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACtB,CAAC,EAEFlB,OAAA,CAACC,GAAG,CAACqB,MAAM;MACTT,IAAI,EAAC,cAAc;MACnBU,SAAS,EAAE3B;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACzB,CAAC,EAEFlB,OAAA,CAACC,GAAG,CAACqB,MAAM;MACTT,IAAI,EAAC,UAAU;MACfU,SAAS,EAAE1B;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAC3B,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAEW,CAAC;AAEpB,CAAC;AAuBD,eAAehB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}